"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import cloudinary
import cloudinary.uploader
import cloudinary.api
from dotenv import load_dotenv
import os


load_dotenv()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG')

ALLOWED_HOSTS = ["*"] 
 
REST_FRAMEWORK = { 
    "DEFAULT_AUTHENTICATION_CLASSES": ( 
        "rest_framework_simplejwt.authentication.JWTAuthentication", 
    ), 
    "DEFAULT_PERMISSION_CLASSES": [ 
        "rest_framework.permissions.IsAuthenticated", 
    ], 
} 
 
SIMPLE_JWT = { 
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=30), 
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1), 
}




# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_rest_passwordreset',
    'api',
    'cloudinary',
    'rest_framework',
    'corsheaders',
]

DEFAULT_FILE_STORAGE = "cloudinary_storage.storage.MediaCloudinaryStorage"

cloudinary.config(
    cloud_name = os.getenv('CLOUDINARY_CLOUD_NAME'),
    api_key = os.getenv('CLOUDINARY_API_KEY'),
    api_secret = os.getenv('CLOUDINARY_API_SECRET'),
    secure = True
)

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = { 
    "default": { 
        "ENGINE": "django.db.backends.postgresql", 
        "NAME": os.getenv("DB_NAME"), 
        "USER": os.getenv("DB_USER"), 
        "PASSWORD": os.getenv("DB_PWD"), 
        "HOST": os.getenv("DB_HOST"), 
        "PORT": os.getenv("DB_PORT"), 
    } 
}

# For development only: prints emails to the console
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'




JAZZMIN_SETTINGS = {
    "site_title": "SkillLearn Admin",
    "site_header": "SkillLearn Dashboard",
    "site_brand": "SkillLearn",
    "welcome_sign": "Welcome to SkillLearn Admin Panel",
    "copyright": "SkillLearn Platform Â© 2025",
    
    # Optional: use your own logo (put logo in static folder)
    "site_logo": "images/logo.png",
    "site_logo_classes": "img-circle",

    # Icons for your models (FontAwesome icons)
    "icons": {
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        "api.Skill": "fas fa-lightbulb",
        "api.Lesson": "fas fa-book",
        "api.QuizQuestion": "fas fa-question-circle",
        "api.UserProgress": "fas fa-chart-line",
        "api.Review": "fas fa-comments",
    },

    # Sidebar
    "navigation_expanded": True,
    "hide_apps": [],
    "hide_models": [],
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOW_ALL_ORIGINS = True 
CORS_ALLOWS_CREDENTIALS = True
